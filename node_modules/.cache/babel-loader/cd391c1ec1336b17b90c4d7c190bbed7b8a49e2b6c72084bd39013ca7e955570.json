{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Adv Project\\\\ckv-pays\\\\src\\\\components\\\\RedirectPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedirectPage = () => {\n  _s();\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\n  useEffect(() => {\n    // Simulating fetching data from a JSON file\n    const fetchData = async () => {\n      // Replace 'your_data.json' with the actual path to your JSON file\n      const response = await fetch(\"your_data.json\");\n      const data = await response.json();\n\n      // Simulating data retrieval for a specific short URL\n      const shortUrl = window.location.pathname.substr(1); // Extract short URL from the path\n      const originalUrl = data[shortUrl];\n\n      // Display Google Ads or perform other actions here\n    };\n\n    fetchData();\n\n    // Set a timeout to show the \"Get Link\" button after 15 seconds\n    const timer = setTimeout(() => {\n      setShowGetLinkButton(true);\n    }, 5000);\n\n    // Cleanup the timer on component unmount\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Redirect to the original source URL when \"Get Link\" button is clicked\n  const redirectToSource = () => {\n    // Simulating fetching data from a JSON file\n    const fetchData = async () => {\n      try {\n        const response = await fetch('./url.json');\n        const data = await response.json();\n\n        // ... rest of the code\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Handle the error, e.g., show an error message to the user\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Countdown: 15 seconds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showGetLinkButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getLinkButton\",\n      onClick: redirectToSource,\n      children: \"Get Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(RedirectPage, \"vI9K3bipxEoK1zivmrJ/sCwJcR4=\");\n_c = RedirectPage;\nexport default RedirectPage;\nvar _c;\n$RefreshReg$(_c, \"RedirectPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RedirectPage","_s","showGetLinkButton","setShowGetLinkButton","fetchData","response","fetch","data","json","shortUrl","window","location","pathname","substr","originalUrl","timer","setTimeout","clearTimeout","redirectToSource","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Adv Project/ckv-pays/src/components/RedirectPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst RedirectPage = () => {\r\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Simulating fetching data from a JSON file\r\n    const fetchData = async () => {\r\n      // Replace 'your_data.json' with the actual path to your JSON file\r\n      const response = await fetch(\"your_data.json\");\r\n      const data = await response.json();\r\n\r\n      // Simulating data retrieval for a specific short URL\r\n      const shortUrl = window.location.pathname.substr(1); // Extract short URL from the path\r\n      const originalUrl = data[shortUrl];\r\n\r\n      // Display Google Ads or perform other actions here\r\n    };\r\n\r\n    fetchData();\r\n\r\n    // Set a timeout to show the \"Get Link\" button after 15 seconds\r\n    const timer = setTimeout(() => {\r\n      setShowGetLinkButton(true);\r\n    }, 5000);\r\n\r\n    // Cleanup the timer on component unmount\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Redirect to the original source URL when \"Get Link\" button is clicked\r\n  const redirectToSource = () => {\r\n    // Simulating fetching data from a JSON file\r\n    const fetchData = async () => {\r\n        try {\r\n          const response = await fetch('./url.json');\r\n          const data = await response.json();\r\n      \r\n          // ... rest of the code\r\n      \r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n          // Handle the error, e.g., show an error message to the user\r\n        }\r\n      };\r\n      \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Your Google Ads code goes here */}\r\n\r\n      {/* Countdown Timer */}\r\n      <div>Countdown: 15 seconds</div>\r\n\r\n      {/* \"Get Link\" Button */}\r\n      {showGetLinkButton && (\r\n        <button id=\"getLinkButton\" onClick={redirectToSource}>\r\n          Get Link\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedirectPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;MAC9C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,MAAMC,WAAW,GAAGP,IAAI,CAACE,QAAQ,CAAC;;MAElC;IACF,CAAC;;IAEDL,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMW,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7Bb,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMc,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,MAAMd,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;QAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;MAEF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;MACF;IACF,CAAC;EAEL,CAAC;;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBAIEtB,OAAA;MAAAsB,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAG/BvB,iBAAiB,iBAChBH,OAAA;MAAQ2B,EAAE,EAAC,eAAe;MAACC,OAAO,EAAET,gBAAiB;MAAAG,QAAA,EAAC;IAEtD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7DID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA+DlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}