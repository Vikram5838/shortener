{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Adv Project\\\\ckv-pays\\\\src\\\\components\\\\RedirectPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedirectPage = () => {\n  _s();\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\n  const [redirectToSource, setRedirectToSource] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Attempt to retrieve data from local storage\n        const storedData = localStorage.getItem('urlData');\n        console.log('Stored Data:', storedData);\n\n        // If data exists in local storage, parse and set it\n        if (storedData) {\n          const jsonData = JSON.parse(storedData);\n          console.log('Parsed Data:', jsonData);\n          setData(jsonData);\n        } else {\n          // Simulate setting example data in localStorage\n          const exampleData = {\n            abc123: 'https://www.example.com/original-url-1',\n            xyz789: 'https://www.example.com/original-url-2',\n            short123: 'https://www.example.com/original-url-3'\n          };\n\n          // Set the example data in localStorage\n          localStorage.setItem('urlData', JSON.stringify(exampleData));\n\n          // Set the data state\n          setData(exampleData);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        // Handle the error, e.g., show an error message to the user\n      }\n    };\n\n    fetchData();\n  }, []);\n  const handleGetLinkClick = () => {\n    // Set the state to trigger the redirection to the source\n    setRedirectToSource(true);\n  };\n\n  // Redirect to the source URL if the state is set\n  if (redirectToSource) {\n    window.location.href = 'https://www.example.com/original-url'; // Replace with your actual source URL\n    return null; // This line is necessary to prevent rendering additional content after the redirection\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showGetLinkButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getLinkButton\",\n      onClick: handleGetLinkClick,\n      children: \"Get Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(RedirectPage, \"rOO+yI0qlctfyO92p2pVyLiuSLU=\");\n_c = RedirectPage;\nexport default RedirectPage;\nvar _c;\n$RefreshReg$(_c, \"RedirectPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RedirectPage","_s","showGetLinkButton","setShowGetLinkButton","redirectToSource","setRedirectToSource","fetchData","storedData","localStorage","getItem","console","log","jsonData","JSON","parse","setData","exampleData","abc123","xyz789","short123","setItem","stringify","error","message","handleGetLinkClick","window","location","href","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Adv Project/ckv-pays/src/components/RedirectPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst RedirectPage = () => {\r\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\r\n  const [redirectToSource, setRedirectToSource] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Attempt to retrieve data from local storage\r\n        const storedData = localStorage.getItem('urlData');\r\n        console.log('Stored Data:', storedData);\r\n\r\n        // If data exists in local storage, parse and set it\r\n        if (storedData) {\r\n          const jsonData = JSON.parse(storedData);\r\n          console.log('Parsed Data:', jsonData);\r\n          setData(jsonData);\r\n        } else {\r\n          // Simulate setting example data in localStorage\r\n          const exampleData = {\r\n            abc123: 'https://www.example.com/original-url-1',\r\n            xyz789: 'https://www.example.com/original-url-2',\r\n            short123: 'https://www.example.com/original-url-3',\r\n          };\r\n\r\n          // Set the example data in localStorage\r\n          localStorage.setItem('urlData', JSON.stringify(exampleData));\r\n\r\n          // Set the data state\r\n          setData(exampleData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n        // Handle the error, e.g., show an error message to the user\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleGetLinkClick = () => {\r\n    // Set the state to trigger the redirection to the source\r\n    setRedirectToSource(true);\r\n  };\r\n\r\n  // Redirect to the source URL if the state is set\r\n  if (redirectToSource) {\r\n    window.location.href = 'https://www.example.com/original-url'; // Replace with your actual source URL\r\n    return null; // This line is necessary to prevent rendering additional content after the redirection\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* \"Get Link\" Button */}\r\n      {showGetLinkButton && (\r\n        <button id=\"getLinkButton\" onClick={handleGetLinkClick}>\r\n          Get Link\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedirectPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;QAClDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,UAAU,CAAC;;QAEvC;QACA,IAAIA,UAAU,EAAE;UACd,MAAMK,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC;UACvCG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,QAAQ,CAAC;UACrCG,OAAO,CAACH,QAAQ,CAAC;QACnB,CAAC,MAAM;UACL;UACA,MAAMI,WAAW,GAAG;YAClBC,MAAM,EAAE,wCAAwC;YAChDC,MAAM,EAAE,wCAAwC;YAChDC,QAAQ,EAAE;UACZ,CAAC;;UAED;UACAX,YAAY,CAACY,OAAO,CAAC,SAAS,EAAEP,IAAI,CAACQ,SAAS,CAACL,WAAW,CAAC,CAAC;;UAE5D;UACAD,OAAO,CAACC,WAAW,CAAC;QACtB;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;QACpD;MACF;IACF,CAAC;;IAEDjB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAnB,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA,IAAID,gBAAgB,EAAE;IACpBqB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sCAAsC,CAAC,CAAC;IAC/D,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA,oBACE5B,OAAA;IAAA6B,QAAA,EAEG1B,iBAAiB,iBAChBH,OAAA;MAAQ8B,EAAE,EAAC,eAAe;MAACC,OAAO,EAAEN,kBAAmB;MAAAI,QAAA,EAAC;IAExD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CA5DID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA8DlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}