{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Adv Project\\\\ckv-pays\\\\src\\\\components\\\\AdRedirectApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdRedirectApp = () => {\n  _s();\n  const [showAds, setShowAds] = useState(true);\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\n  const [redirectLink, setRedirectLink] = useState('');\n  const fetchShortCodes = async () => {\n    // Replace 'path/to/data.json' with the actual path to your JSON file\n    const response = await fetch('./url.json');\n    const data = await response.json();\n    return data;\n  };\n  const handleGetLinkClick = async () => {\n    const shortCodes = await fetchShortCodes();\n\n    // Replace 'YOUR_SHORT_CODE' with the actual short code you want to use\n    const shortCode = shortCodes;\n    console.log(shortCode);\n\n    // Check if the short code exists in the data\n    if (shortCodes && shortCodes[shortCode]) {\n      setRedirectLink(shortCodes[shortCode]);\n      // Open the link in a new tab\n      window.open(shortCodes[shortCode], '_blank');\n    } else {\n      console.error('Short code not found.');\n      // Provide feedback to the user\n    }\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowGetLinkButton(true);\n    }, 5000);\n\n    // Clean up the timer to avoid memory leaks\n    return () => clearTimeout(timer);\n  }, []);\n\n  // const handleGetLinkClick = () => {\n  //   // Replace 'YOUR_REDIRECT_LINK' with the actual link you want to redirect to\n  //    const redirectLink = 'https://www.youtube.com/';\n  // // You can also perform any additional actions before redirecting if needed\n  //     window.open(redirectLink, '_blank');\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showAds && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ads-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Google Ads Go Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), showGetLinkButton && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"get-link-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetLinkClick,\n        children: \"Get Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AdRedirectApp, \"6u6guYJp1wybhzrlpzTNgJ46pIw=\");\n_c = AdRedirectApp;\nexport default AdRedirectApp;\nvar _c;\n$RefreshReg$(_c, \"AdRedirectApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdRedirectApp","_s","showAds","setShowAds","showGetLinkButton","setShowGetLinkButton","redirectLink","setRedirectLink","fetchShortCodes","response","fetch","data","json","handleGetLinkClick","shortCodes","shortCode","console","log","window","open","error","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Adv Project/ckv-pays/src/components/AdRedirectApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdRedirectApp = () => {\r\n  const [showAds, setShowAds] = useState(true);\r\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\r\n  const [redirectLink, setRedirectLink] = useState('');\r\n\r\n  const fetchShortCodes = async () => {\r\n    // Replace 'path/to/data.json' with the actual path to your JSON file\r\n    const response = await fetch('./url.json');\r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n\r\n  const handleGetLinkClick = async () => {\r\n    const shortCodes = await fetchShortCodes();\r\n\r\n    // Replace 'YOUR_SHORT_CODE' with the actual short code you want to use\r\n    const shortCode = shortCodes;\r\n    console.log(shortCode)\r\n\r\n    // Check if the short code exists in the data\r\n    if (shortCodes && shortCodes[shortCode]) {\r\n      setRedirectLink(shortCodes[shortCode]);\r\n      // Open the link in a new tab\r\n      window.open(shortCodes[shortCode], '_blank');\r\n    } else {\r\n      console.error('Short code not found.');\r\n      // Provide feedback to the user\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setShowGetLinkButton(true);\r\n    }, 5000);\r\n\r\n    // Clean up the timer to avoid memory leaks\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // const handleGetLinkClick = () => {\r\n  //   // Replace 'YOUR_REDIRECT_LINK' with the actual link you want to redirect to\r\n  //    const redirectLink = 'https://www.youtube.com/';\r\n  // // You can also perform any additional actions before redirecting if needed\r\n  //     window.open(redirectLink, '_blank');\r\n  // };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {showAds && (\r\n        <div className=\"ads-container\">\r\n          {/* Display Google Ads here */}\r\n          <p>Google Ads Go Here</p>\r\n        </div>\r\n      )}\r\n\r\n      {showGetLinkButton && (\r\n        <div className=\"get-link-container\">\r\n          <button onClick={handleGetLinkClick}>Get Link</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* You can add additional content or styling based on your needs */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdRedirectApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;IAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,UAAU,GAAG,MAAMN,eAAe,CAAC,CAAC;;IAE1C;IACA,MAAMO,SAAS,GAAGD,UAAU;IAC5BE,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;;IAEtB;IACA,IAAID,UAAU,IAAIA,UAAU,CAACC,SAAS,CAAC,EAAE;MACvCR,eAAe,CAACO,UAAU,CAACC,SAAS,CAAC,CAAC;MACtC;MACAG,MAAM,CAACC,IAAI,CAACL,UAAU,CAACC,SAAS,CAAC,EAAE,QAAQ,CAAC;IAC9C,CAAC,MAAM;MACLC,OAAO,CAACI,KAAK,CAAC,uBAAuB,CAAC;MACtC;IACF;EACF,CAAC;;EACDvB,SAAS,CAAC,MAAM;IACd,MAAMwB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BjB,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMkB,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEtB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBvB,OAAO,iBACNH,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAAAC,QAAA,eAE5B1B,OAAA;QAAA0B,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACN,EAEAzB,iBAAiB,iBAChBL,OAAA;MAAKyB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC1B,OAAA;QAAQ+B,OAAO,EAAEjB,kBAAmB;QAAAY,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/DID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAiEnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}