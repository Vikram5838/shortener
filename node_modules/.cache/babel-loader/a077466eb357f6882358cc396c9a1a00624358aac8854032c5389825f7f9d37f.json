{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Adv Project\\\\ckv-pays\\\\src\\\\components\\\\RedirectPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedirectPage = () => {\n  _s();\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\n  const [redirectToSource, setRedirectToSource] = useState(false);\n  useEffect(() => {\n    // Simulate fetching data from a server (e.g., a JSON file)\n    const fetchData = async () => {\n      try {\n        // Simulate fetching data from localStorage\n        const storedData = localStorage.getItem('urlData');\n        if (storedData) {\n          const jsonData = JSON.parse(storedData);\n\n          // Simulate displaying Google Ads or other content\n          console.log('Displaying Google Ads or other content', jsonData);\n\n          // Set a timeout to show the \"Get Link\" button after 15 seconds\n          const timer = setTimeout(() => {\n            setShowGetLinkButton(true);\n          }, 15000);\n\n          // Cleanup the timer on component unmount or if the user clicks \"Get Link\"\n          return () => clearTimeout(timer);\n        } else {\n          throw new Error('Data not found in localStorage');\n        }\n      } catch (error) {\n        console.error('Error:', error.message);\n        // Handle the error, e.g., show an error message to the user\n      }\n    };\n\n    fetchData();\n  }, []);\n  const handleGetLinkClick = () => {\n    // Set the state to trigger the redirection to the source\n    setRedirectToSource(true);\n  };\n\n  // Redirect to the source URL if the state is set\n  if (redirectToSource) {\n    window.location.href = 'https://www.example.com/original-url'; // Replace with your actual source URL\n    return null; // This line is necessary to prevent rendering additional content after the redirection\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showGetLinkButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getLinkButton\",\n      onClick: handleGetLinkClick,\n      children: \"Get Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(RedirectPage, \"rOO+yI0qlctfyO92p2pVyLiuSLU=\");\n_c = RedirectPage;\nexport default RedirectPage;\nvar _c;\n$RefreshReg$(_c, \"RedirectPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RedirectPage","_s","showGetLinkButton","setShowGetLinkButton","redirectToSource","setRedirectToSource","fetchData","storedData","localStorage","getItem","jsonData","JSON","parse","console","log","timer","setTimeout","clearTimeout","Error","error","message","handleGetLinkClick","window","location","href","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Adv Project/ckv-pays/src/components/RedirectPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst RedirectPage = () => {\r\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\r\n  const [redirectToSource, setRedirectToSource] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching data from a server (e.g., a JSON file)\r\n    const fetchData = async () => {\r\n      try {\r\n        // Simulate fetching data from localStorage\r\n        const storedData = localStorage.getItem('urlData');\r\n\r\n        if (storedData) {\r\n          const jsonData = JSON.parse(storedData);\r\n\r\n          // Simulate displaying Google Ads or other content\r\n          console.log('Displaying Google Ads or other content',jsonData);\r\n\r\n          // Set a timeout to show the \"Get Link\" button after 15 seconds\r\n          const timer = setTimeout(() => {\r\n            setShowGetLinkButton(true);\r\n          }, 15000);\r\n\r\n          // Cleanup the timer on component unmount or if the user clicks \"Get Link\"\r\n          return () => clearTimeout(timer);\r\n\r\n        } else {\r\n          throw new Error('Data not found in localStorage');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n        // Handle the error, e.g., show an error message to the user\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleGetLinkClick = () => {\r\n    // Set the state to trigger the redirection to the source\r\n    setRedirectToSource(true);\r\n  };\r\n\r\n  // Redirect to the source URL if the state is set\r\n  if (redirectToSource) {\r\n    window.location.href = 'https://www.example.com/original-url'; // Replace with your actual source URL\r\n    return null; // This line is necessary to prevent rendering additional content after the redirection\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* \"Get Link\" Button */}\r\n      {showGetLinkButton && (\r\n        <button id=\"getLinkButton\" onClick={handleGetLinkClick}>\r\n          Get Link\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedirectPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;QAElD,IAAIF,UAAU,EAAE;UACd,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;;UAEvC;UACAM,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAACJ,QAAQ,CAAC;;UAE9D;UACA,MAAMK,KAAK,GAAGC,UAAU,CAAC,MAAM;YAC7Bb,oBAAoB,CAAC,IAAI,CAAC;UAC5B,CAAC,EAAE,KAAK,CAAC;;UAET;UACA,OAAO,MAAMc,YAAY,CAACF,KAAK,CAAC;QAElC,CAAC,MAAM;UACL,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;QACnD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;QACtC;MACF;IACF,CAAC;;IAEDd,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAhB,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA,IAAID,gBAAgB,EAAE;IACpBkB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sCAAsC,CAAC,CAAC;IAC/D,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA,oBACEzB,OAAA;IAAA0B,QAAA,EAEGvB,iBAAiB,iBAChBH,OAAA;MAAQ2B,EAAE,EAAC,eAAe;MAACC,OAAO,EAAEN,kBAAmB;MAAAI,QAAA,EAAC;IAExD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1DID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA4DlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}