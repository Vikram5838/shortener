{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Adv Project\\\\ckv-pays\\\\src\\\\components\\\\Shortner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shortner = () => {\n  _s();\n  const [links, setLinks] = useState([]);\n  const [newLink, setNewLink] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3001/URL').then(response => response.json()).then(data => setLinks(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const handleAddLink = async () => {\n    if (newLink.trim() === '') {\n      // Don't add empty links\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3001/URL', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url: newLink\n        })\n      });\n      if (response.ok) {\n        console.log('Link added successfully');\n        setLinks([...links, {\n          id: links.length + 1,\n          url: newLink\n        }]);\n        setNewLink('');\n      } else {\n        console.error('Failed to add link');\n      }\n    } catch (error) {\n      console.error('Error adding link:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newLink,\n      onChange: e => setNewLink(e.target.value),\n      placeholder: \"Enter new link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddLink,\n      children: \"Add Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), Array.isArray(links) ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: links.map(link => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: link.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, link.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Shortner, \"Qd6fQpl1kyw1FoaU3MX3scJYzFE=\");\n_c = Shortner;\nexport default Shortner;\nvar _c;\n$RefreshReg$(_c, \"Shortner\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Shortner","_s","links","setLinks","newLink","setNewLink","fetch","then","response","json","data","catch","error","console","handleAddLink","trim","method","headers","body","JSON","stringify","url","ok","log","id","length","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","map","link","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Adv Project/ckv-pays/src/components/Shortner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Shortner = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [newLink, setNewLink] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/URL')\r\n      .then(response => response.json())\r\n      .then(data => setLinks(data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  const handleAddLink = async () => {\r\n    if (newLink.trim() === '') {\r\n      // Don't add empty links\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/URL', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ url: newLink }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Link added successfully');\r\n        setLinks([...links, { id: links.length + 1, url: newLink }]);\r\n        setNewLink('');\r\n      } else {\r\n        console.error('Failed to add link');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding link:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={newLink}\r\n        onChange={(e) => setNewLink(e.target.value)}\r\n        placeholder=\"Enter new link\"\r\n      />\r\n      <button onClick={handleAddLink}>Add Link</button>\r\n  \r\n      {Array.isArray(links) ? (\r\n        <ul>\r\n          {links.map((link) => (\r\n            <li key={link.id}>\r\n              <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {link.url}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Shortner;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}