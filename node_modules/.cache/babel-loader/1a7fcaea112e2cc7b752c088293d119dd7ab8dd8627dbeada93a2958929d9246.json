{"ast":null,"code":"useEffect(() => {\n  fetch(`http://localhost:3001/URL`).then(response => response.json()).then(data => setLinks(data)).catch(error => console.error('Error fetching data:', error));\n}, []);\nconst handleAddLink = async () => {\n  if (newLink.trim() === '') {\n    // Don't add empty links\n    return;\n  }\n  try {\n    const response = await fetch(`http://localhost:3001/URL`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url: newLink\n      })\n    });\n    if (response.ok) {\n      console.log('Link added successfully');\n\n      // Fetch the updated data after adding a new link\n      const updatedData = await fetch(`http://localhost:3001/URL`).then(response => response.json());\n      setLinks(updatedData);\n      setNewLink('');\n    } else {\n      console.error('Failed to add link');\n    }\n  } catch (error) {\n    console.error('Error adding link:', error);\n  }\n};","map":{"version":3,"names":["useEffect","fetch","then","response","json","data","setLinks","catch","error","console","handleAddLink","newLink","trim","method","headers","body","JSON","stringify","url","ok","log","updatedData","setNewLink"],"sources":["C:/Users/ACER/Desktop/Adv Project/ckv-pays/src/components/Shortner.jsx"],"sourcesContent":["useEffect(() => {\r\n    fetch(`http://localhost:3001/URL`)\r\n      .then(response => response.json())\r\n      .then(data => setLinks(data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n  \r\n  const handleAddLink = async () => {\r\n    if (newLink.trim() === '') {\r\n      // Don't add empty links\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`http://localhost:3001/URL`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ url: newLink }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log('Link added successfully');\r\n  \r\n        // Fetch the updated data after adding a new link\r\n        const updatedData = await fetch(`http://localhost:3001/URL`).then(response => response.json());\r\n        setLinks(updatedData);\r\n  \r\n        setNewLink('');\r\n      } else {\r\n        console.error('Failed to add link');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding link:', error);\r\n    }\r\n  };\r\n  "],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACZC,KAAK,CAAE,2BAA0B,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,QAAQ,CAACD,IAAI,CAAC,CAAC,CAC5BE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;AACjE,CAAC,EAAE,EAAE,CAAC;AAEN,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAIC,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACzB;IACA;EACF;EAEA,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMF,KAAK,CAAE,2BAA0B,EAAE;MACxDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,GAAG,EAAEP;MAAQ,CAAC;IACvC,CAAC,CAAC;IAEF,IAAIR,QAAQ,CAACgB,EAAE,EAAE;MACfV,OAAO,CAACW,GAAG,CAAC,yBAAyB,CAAC;;MAEtC;MACA,MAAMC,WAAW,GAAG,MAAMpB,KAAK,CAAE,2BAA0B,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC9FE,QAAQ,CAACe,WAAW,CAAC;MAErBC,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACLb,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAC;IACrC;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC5C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}