{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Adv Project\\\\ckv-pays\\\\src\\\\components\\\\RedirectPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedirectPage = () => {\n  _s();\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\n  useEffect(() => {\n    // Simulating fetching data from a JSON file\n    const fetchData = async () => {\n      // Replace 'your_data.json' with the actual path to your JSON file\n      const response = await fetch('your_data.json');\n      const data = await response.json();\n\n      // Simulating data retrieval for a specific short URL\n      const shortUrl = window.location.pathname.substr(1); // Extract short URL from the path\n      const originalUrl = data[shortUrl];\n\n      // Display Google Ads or perform other actions here\n\n      // Set a timeout to show the \"Get Link\" button after 15 seconds\n      setTimeout(() => {\n        setShowGetLinkButton(true);\n      }, 15000);\n\n      // Redirect to the original source URL when \"Get Link\" button is clicked\n      const redirectToSource = () => {\n        window.location.href = originalUrl;\n      };\n\n      // Attach the \"Get Link\" button click event\n      document.getElementById('getLinkButton').addEventListener('click', redirectToSource);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Countdown: 15 seconds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), showGetLinkButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getLinkButton\",\n      children: \"Get Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(RedirectPage, \"vI9K3bipxEoK1zivmrJ/sCwJcR4=\");\n_c = RedirectPage;\nexport default RedirectPage;\nvar _c;\n$RefreshReg$(_c, \"RedirectPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RedirectPage","_s","showGetLinkButton","setShowGetLinkButton","fetchData","response","fetch","data","json","shortUrl","window","location","pathname","substr","originalUrl","setTimeout","redirectToSource","href","document","getElementById","addEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Adv Project/ckv-pays/src/components/RedirectPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst RedirectPage = () => {\r\n  const [showGetLinkButton, setShowGetLinkButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Simulating fetching data from a JSON file\r\n    const fetchData = async () => {\r\n      // Replace 'your_data.json' with the actual path to your JSON file\r\n      const response = await fetch('your_data.json');\r\n      const data = await response.json();\r\n\r\n      // Simulating data retrieval for a specific short URL\r\n      const shortUrl = window.location.pathname.substr(1); // Extract short URL from the path\r\n      const originalUrl = data[shortUrl];\r\n\r\n      // Display Google Ads or perform other actions here\r\n\r\n      // Set a timeout to show the \"Get Link\" button after 15 seconds\r\n      setTimeout(() => {\r\n        setShowGetLinkButton(true);\r\n      }, 15000);\r\n\r\n      // Redirect to the original source URL when \"Get Link\" button is clicked\r\n      const redirectToSource = () => {\r\n        window.location.href = originalUrl;\r\n      };\r\n\r\n      // Attach the \"Get Link\" button click event\r\n      document.getElementById('getLinkButton').addEventListener('click', redirectToSource);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Your Google Ads code goes here */}\r\n\r\n      {/* Countdown Timer */}\r\n      <div>Countdown: 15 seconds</div>\r\n\r\n      {/* \"Get Link\" Button */}\r\n      {showGetLinkButton && <button id=\"getLinkButton\">Get Link</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedirectPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;MAC9C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,MAAMC,WAAW,GAAGP,IAAI,CAACE,QAAQ,CAAC;;MAElC;;MAEA;MACAM,UAAU,CAAC,MAAM;QACfZ,oBAAoB,CAAC,IAAI,CAAC;MAC5B,CAAC,EAAE,KAAK,CAAC;;MAET;MACA,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;QAC7BN,MAAM,CAACC,QAAQ,CAACM,IAAI,GAAGH,WAAW;MACpC,CAAC;;MAED;MACAI,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,gBAAgB,CAAC,OAAO,EAAEJ,gBAAgB,CAAC;IACtF,CAAC;IAEDZ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAsB,QAAA,gBAIEtB,OAAA;MAAAsB,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAG/BvB,iBAAiB,iBAAIH,OAAA;MAAQ2B,EAAE,EAAC,eAAe;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5CID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}